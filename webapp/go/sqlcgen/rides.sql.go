// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: rides.sql

package sqlcgen

import (
	"context"
)

const getRidesByUserID = `-- name: GetRidesByUserID :many
SELECT id, user_id, chair_id, pickup_latitude, pickup_longitude, destination_latitude, destination_longitude, evaluation, created_at, updated_at FROM rides WHERE user_id = ? ORDER BY created_at DESC
`

func (q *Queries) GetRidesByUserID(ctx context.Context, userID string) ([]Ride, error) {
	rows, err := q.db.Query(ctx, getRidesByUserID, userID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Ride
	for rows.Next() {
		var i Ride
		if err := rows.Scan(
			&i.ID,
			&i.UserID,
			&i.ChairID,
			&i.PickupLatitude,
			&i.PickupLongitude,
			&i.DestinationLatitude,
			&i.DestinationLongitude,
			&i.Evaluation,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
